"use strict";(self.webpackChunkaalmarhabi=self.webpackChunkaalmarhabi||[]).push([[7905],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=u(a),h=n,g=c["".concat(l,".").concat(h)]||c[h]||p[h]||s;return a?r.createElement(g,o(o({ref:t},m),{},{components:a})):r.createElement(g,o({ref:t},m))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<s;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8851:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const s={slug:"rust",title:"Learning Rust Language",authors:[{name:"Alhussain Almarhabi",title:"Main author",url:"https://github.com/aalmarhabi",image_url:"https://github.com/aalmarhabi.png"}],tags:["rust","c++"]},o=void 0,i={permalink:"/blog/rust",editUrl:"https://github.com/aalmarhabi/blog/2023-04-02--rustVsCpp.md",source:"@site/blog/2023-04-02--rustVsCpp.md",title:"Learning Rust Language",description:"Learning Rust Language: Pros and Cons",date:"2023-04-02T00:00:00.000Z",formattedDate:"April 2, 2023",tags:[{label:"rust",permalink:"/blog/tags/rust"},{label:"c++",permalink:"/blog/tags/c"}],readingTime:3.61,hasTruncateMarker:!1,authors:[{name:"Alhussain Almarhabi",title:"Main author",url:"https://github.com/aalmarhabi",image_url:"https://github.com/aalmarhabi.png",imageURL:"https://github.com/aalmarhabi.png"}],frontMatter:{slug:"rust",title:"Learning Rust Language",authors:[{name:"Alhussain Almarhabi",title:"Main author",url:"https://github.com/aalmarhabi",image_url:"https://github.com/aalmarhabi.png",imageURL:"https://github.com/aalmarhabi.png"}],tags:["rust","c++"]},nextItem:{title:"Artificial General Intelligence And The Future!",permalink:"/blog/chatgpt"}},l={authorsImageUrls:[void 0]},u=[{value:"Learning Rust Language: Pros and Cons",id:"learning-rust-language-pros-and-cons",level:2},{value:"Pros",id:"pros",level:2},{value:"Cons",id:"cons",level:2},{value:"Rust vs. C++",id:"rust-vs-c",level:2}],m={toc:u},c="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"learning-rust-language-pros-and-cons"},"Learning Rust Language: Pros and Cons"),(0,n.kt)("p",null,"I personally started learning Rust because I suddenly found myself loving writing in C++. Although I have experience using various languages such as Python, Java, C/C++, Go, and MATLAB, C++ has become my go-to choice for writing small programs. When I heard about Rust and its ability to compete with C++, I became interested in learning it. I\u2019m still in my journey learning Rust, however, here I want to share some information about Rust compared to C++ for myself and anyone who feels the same. Rust is a systems programming language that has gained popularity in recent years due to its speed, memory safety, and concurrency features to the point that you will see Rust cult everywhere on Twitter. Here are some of the pros and cons of learning Rust. "),(0,n.kt)("h2",{id:"pros"},"Pros"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Memory safety:")," Rust's ownership system and borrow checker help prevent common memory errors such as null pointer dereferences and use-after-free bugs. This can make Rust code more reliable and less prone to security vulnerabilities."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Concurrency:")," Rust's lightweight threads and message-passing model make it easy to write concurrent code that scales well across multiple cores."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Speed:")," Rust's performance is comparable to that of C and C++, making it well-suited for low-level systems programming and high-performance applications."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Expressive type system:")," Rust's type system allows for expressive and safe abstractions, such as algebraic data types and pattern matching."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Rust Compiler"),": Rust's compiler is very intelligent. It can highlight bad practices and catch mistakes effectively. Unlike in C++, where huge mistakes can fly past the GCC or Clang compiler.")),(0,n.kt)("h2",{id:"cons"},"Cons"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Learning curve:")," Rust's ownership system and borrow checker can be difficult to understand at first and may require a steep learning curve for developers who are used to garbage-collected languages. Sometimes I personally get confused, but as I practice more problems, I start to think in terms of ownership, which helps a lot."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tooling:")," Rust's ecosystem is still evolving, and some libraries and tools may not be as mature as those in C++ languages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Strictness:")," Rust's emphasis on safety and correctness can sometimes lead to code that is more verbose and harder to read than equivalent code in other languages.")),(0,n.kt)("h2",{id:"rust-vs-c"},"Rust vs. C++"),(0,n.kt)("p",null,"Rust and C++ are both systems programming languages that offer high performance and low-level control. However, Rust has some unique features that we already mentioned in the pros which set it apart from C++:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Memory safety:")," C++ requires you to manage memory manually. But unlike Rust, where every value in Rust has a variable that owns it, there can only be one owner at a time. When the owner goes out of scope, the value is dropped, and its memory is freed"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Concurrency:")," Rust's lightweight threads and message-passing model make it easier to write concurrent code that scales across multiple cores. C++ offers a powerful set of tools for concurrent programming but requires careful attention to detail and a solid understanding of memory management and thread synchronization concepts."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Expressive type system:")," Rust's type system allows for safer and more expressive abstractions than C++, such as algebraic data types and pattern matching.")),(0,n.kt)("p",null,"However, there are also some areas where C++ may still have an advantage over Rust:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Maturity:")," C++ has been around for much longer than Rust, and has a more mature ecosystem with a wider range of libraries and tools."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Performance:")," While Rust's performance is comparable to that of C++, some benchmarks show that C++ can still outperform Rust in certain cases.")),(0,n.kt)("p",null,"In summary, Rust is a language that offers strong memory safety and concurrency features, as well as comparable performance to C and C++. While it may take some time to learn Rust's ownership system and borrow checker, it can help prevent common memory errors and lead to more reliable code. Rust's expressive type system also allows for safer and more expressive abstractions than C++."),(0,n.kt)("p",null,"However, developers should be aware of Rust's evolving ecosystem and the potential for verbose code due to its emphasis on safety and correctness. It's also worth considering C++, which has a more mature ecosystem and may outperform Rust in certain cases."),(0,n.kt)("p",null,"Ultimately, the choice between Rust and C++ will depend on the specific needs of a project and the preferences of the developer."))}p.isMDXComponent=!0}}]);