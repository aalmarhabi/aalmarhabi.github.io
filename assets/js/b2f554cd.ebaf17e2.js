"use strict";(self.webpackChunkaalmarhabi=self.webpackChunkaalmarhabi||[]).push([[477],{10:t=>{t.exports=JSON.parse('{"blogPosts":[{"id":"emacs","metadata":{"permalink":"/blog/emacs","editUrl":"https://github.com/aalmarhabi/blog/2022-02-28--emacs.md","source":"@site/blog/2022-02-28--emacs.md","title":"Emacs, Taking Over Your Life!","description":"Just let you know.","date":"2022-02-28T00:00:00.000Z","formattedDate":"February 28, 2022","tags":[{"label":"emacs","permalink":"/blog/tags/emacs"}],"readingTime":2.05,"hasTruncateMarker":false,"authors":[{"name":"Alhussain Almarhabi","title":"Main author","url":"https://github.com/aalmarhabi","image_url":"https://github.com/aalmarhabi.png","imageURL":"https://github.com/aalmarhabi.png"}],"frontMatter":{"slug":"emacs","title":"Emacs, Taking Over Your Life!","authors":[{"name":"Alhussain Almarhabi","title":"Main author","url":"https://github.com/aalmarhabi","image_url":"https://github.com/aalmarhabi.png","imageURL":"https://github.com/aalmarhabi.png"}],"tags":["emacs"]},"nextItem":{"title":"Greetings, Frist Post!","permalink":"/blog/greetings"}},"content":":::danger Emacs is the best IDE\\n\\nJust let you know. \\n\\n:::\\n\\nI just wanted to share some thoughts about my journey using Emacs. I learned about Emacs around 2019 (what\'s wrong with me, I know!) while taking a data structure class. The professor used it to quickly make a buffer (a new window to write the text) but never forced anyone to use it. I got interested in Emacs but only switched partially to it. I was using the Atom text editor at that time. My journey with Emacs was a bit long, and many people will be hesitant to start fully using it. But I want to share maybe how to make it easier. \\n\\n## Emacs Vs. All Other IDE:\\nMany people compare Emacs with a text editor like Vim, VSCode, sublime, or Atom. Or even comparing it with IDE like JetBrains IDE. **BUT** Emacs is not just a text editor or IDE. It is more of a complete operating system in a program! So you can use it as a text editor and configure any programming languages you want. Emacs was built to be customizable, and you can do whatever you want. It uses lisp (emacs-lisp) programing language to write much functionality in Emacs, and you don\'t need to know lisp. \\n\\nI had so many important projects, and I was using MATLAB, Clion, and PyCharm at that time and wanted to avoid taking the risk of using Emacs. However, once I got comfortable using it, it became my to-go choice every time.\\n\\n## How to Start With Emacs\\nThe best thing you can do is to keep yourself from overwhelming yourself with all the features Emacs can offer. To do that, I recommend the following [Install GNU Emacs](https://www.gnu.org/software/emacs/): \\n\\n- Master using key binding in Emacs (give yourself a week). You can do that as a first step. Go over the Emacs tutorial to do that (you don\'t need to finish it all, only how to navigate). \\n- Watch the first three parts of the Emacs from scratch series on [Youtube by System Crafters Channel](https://www.youtube.com/@SystemCrafters/playlists). \\n- Only spend a little bit of time in the course series. Remember, don\'t want to overwhelm yourself. \\n- Use already setup configuration (copy both init.el (.el =  emacs-lisp) and Emacs.org (.org = emacs org mode) in [GitHub repo](https://github.com/daviwil/emacs-from-scratch)\\n- Pick any side project you have and commit to using Emacs with it\\n- As you use Emacs more, you will learn more things."},{"id":"greetings","metadata":{"permalink":"/blog/greetings","editUrl":"https://github.com/aalmarhabi/blog/2022-02-11--greetings.md","source":"@site/blog/2022-02-11--greetings.md","title":"Greetings, Frist Post!","description":"This is my first post on blog using Docusaurus.","date":"2022-02-11T00:00:00.000Z","formattedDate":"February 11, 2022","tags":[{"label":"greetings","permalink":"/blog/tags/greetings"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[{"name":"Alhussain Almarhabi","title":"Main author","url":"https://github.com/aalmarhabi","image_url":"https://github.com/aalmarhabi.png","imageURL":"https://github.com/aalmarhabi.png"}],"frontMatter":{"slug":"greetings","title":"Greetings, Frist Post!","authors":[{"name":"Alhussain Almarhabi","title":"Main author","url":"https://github.com/aalmarhabi","image_url":"https://github.com/aalmarhabi.png","imageURL":"https://github.com/aalmarhabi.png"}],"tags":["greetings"]},"prevItem":{"title":"Emacs, Taking Over Your Life!","permalink":"/blog/emacs"}},"content":"This is my first post on blog using Docusaurus.\\n\\nWhy Docusaurus? Made by Meta for a fast way to create documentation for a new project. Using it for my website is also helpful to be familiar with it in the future.\\n\\n# Markdown Features:\\nSince this is the frist post. I will include some mardown features to use with Docusaurus.\\n\\n## Front Matter\\nMetadata at the top.\\n```md title=\\"my-doc.md\\"\\n---\\nid: my-doc-id\\ntitle: My document title\\ndescription: My document description is here\\nslug; /my-custom-url\\n---\\n```\\n## Code Blocks\\n\\n```rust title=\\"src/hello.rs\\"\\nfn main(){\\n\\tprintln!(\\"Hello, Friends!\\");\\n}\\n\\n```\\n\\n## Admonitions\\n\\n```\\n:::tip My tip\\n\\nUse this awesome feature option\\n\\n:::\\n\\n:::danger Take care\\n\\nThis action is dangerous\\n\\n:::\\n```\\n\\n:::danger Take care\\n\\nThank you!\\n:::\\n\\n## MDX and React Components\\nMDX can make your allows using any React components inside Markdown:\\n```javascript \\nexport const Highlight = ({children, color}) => (\\n  <span\\n    style={{\\n      backgroundColor: color,\\n      borderRadius: \'20px\',\\n      color: \'#fff\',\\n      padding: \'10px\',\\n      cursor: \'pointer\',\\n    }}\\n    onClick={() => {\\n      alert(`You clicked the color ${color} with label ${children}`)\\n    }}>\\n    {children}\\n  </span>\\n);\\n\\nThis is <Highlight color=\\"#25c2a0\\">Docusaurus green</Highlight> !\\n\\nThis is <Highlight color=\\"#1877F2\\">Facebook blue</Highlight> !\\n```\\n\\nexport const Highlight = ({children, color}) => (\\n  <span\\n    style={{\\n      backgroundColor: color,\\n      borderRadius: \'20px\',\\n      color: \'#fff\',\\n      padding: \'10px\',\\n      cursor: \'pointer\',\\n    }}\\n    onClick={() => {\\n      alert(`You clicked the color ${color} with label ${children}`)\\n    }}>\\n    {children}\\n  </span>\\n);\\n\\nThis is <Highlight color=\\"#25c2a0\\">Docusaurus green</Highlight> !\\n\\nThis is <Highlight color=\\"#1877F2\\">Facebook blue</Highlight> !"}]}')}}]);